{"version":3,"sources":["webpack:///src/pages/accountManage/authority.vue","webpack:///./src/pages/accountManage/authority.vue?ff34","webpack:///./src/pages/accountManage/authority.vue"],"names":["initView","_this","this","required","message","trigger","validator","validatePass","value","changePwdConfig","opts","newPassword","callback","accountRoleConfig","add","password","computed","extends_default","Object","vuex_esm","methods","_this2","getAccountFunctionList","then","rs","setFunList","callGetAccountRoleList","callGetAccountList","_this3","getAccountList","id","_this4","getAccountRoleList","roleName","opt","functionName","i","_opts2","_this5","accountId","oldPassword","changeAccountPwd","cancelChangePwd","pwd","children","sellerFuncId","defOpt","roleEditConfig","sellerRoleId","item","defaultCheck","resetFields","_opts","cancelRole","checkList","_this8","accountRoleList","username","remark","_opts3","cancelEditAccount","type","_opts4","_this9","msg","notice","accountManage_authority","render","_vm","_h","$createElement","_c","_self","_m","_v","staticClass","_s","loginCheck","attrs","size","on","click","$event","changePwd","callEditRole","title","visible","isModal","close","update:visible","$set","ref","model","rules","roleEditConfigRules","label","prop","label-width","placeholder","auto-complete","$$v","expression","data","treeList","show-checkbox","node-key","props","defaultProps","check-change","checkedTree","slot","submitRole","staticStyle","width","align","scopedSlots","_u","key","fn","scope","row","callDelRole","callEditAccount","accountListFilter","_l","mapRoleID","callDelAccount","accountRoleConfigRules","edit","submitEditAccount","changePwdConfigRules","_e","submitChangePwd","staticRenderFns","Component","__webpack_require__","normalizeComponent","authority","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/32.8f8eefd4ac4dd908fecd.js","sourcesContent":["<template>\n  <div>\n    <div class=\"title\">\n      <span>账户与权限</span>\n    </div>\n    <div class=\"section\">\n      <div class=\"section-item padding\">\n        <div class=\"section-title\">\n          <span>当前账号设置</span>\n        </div>\n        <div class=\"block-item\">\n          账号:{{loginCheck.username}}\n        </div>\n        <div class=\"block-item\">\n          密码:\n          <el-button size=\"small\" type=\"primary\" @click=\"changePwd(loginCheck.id,'')\">修改密码</el-button>\n        </div>\n      </div>\n      <div class=\"section-item\">\n        <div class=\"section-title\">\n          <span>角色设置</span>\n          <div class=\"block-item\">\n            <el-button size=\"small\" type=\"primary\" @click=\"callEditRole()\">新增角色</el-button>\n          </div>\n        </div>\n        <div class=\"modal\">\n          <el-dialog size=\"tiny\" @close=\"cancelRole()\" title=\"角色编辑\" :visible.sync=\"roleEditConfig.isModal\">\n            <el-form :model=\"roleEditConfig.opts\" :rules=\"roleEditConfigRules\" ref=\"roleEditConfig.opts\">\n              <el-form-item  label=\"角色\" prop=\"roleName\" label-width=\"80px\">\n                <el-input   v-model=\"roleEditConfig.opts.roleName\" placeholder=\"角色名称\" auto-complete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item  label=\"描述\" prop=\"roleDesc\" label-width=\"80px\">\n                <el-input  v-model=\"roleEditConfig.opts.roleDesc\" placeholder=\"角色描述\" auto-complete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item  label=\"权限\" prop=\"roleFunctionRelations\" label-width=\"80px\">\n                <!--:default-checked-keys=\"roleEditConfig.defaultChecked\"-->\n                <el-tree @check-change=\"checkedTree\" ref=\"tree\"  :data=\"treeList\" show-checkbox node-key=\"id\"  :props=\"defaultProps\" auto-complete=\"off\"></el-tree>\n              </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n              <el-button @click=\"cancelRole()\">取 消</el-button>\n              <el-button type=\"primary\" @click=\"submitRole('roleEditConfig.opts')\">确 定</el-button>\n            </div>\n          </el-dialog>\n        </div>\n      </div>\n      <div class=\"result-view\">\n        <el-table :data=\"accountRoleList\" style=\"width: 100%;\">\n          <el-table-column prop=\"roleName\"  label=\"角色\" width=\"340\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"roleDesc\"  label=\"描述\" width=\"340\" align=\"center\"></el-table-column>\n          <el-table-column  label=\"操作\" align=\"center\">\n            <template slot-scope=\"scope\">\n              <el-button size=\"small\" type=\"primary\"  @click=\"callEditRole(scope.row)\">编辑</el-button>\n              <el-button size=\"small\" @click=\"callDelRole(scope.row.id)\">删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n      <div class=\"section-item\">\n        <div class=\"section-title\">\n          <span>其他账号设置</span>\n          <div class=\"block-item\">\n            <el-button size=\"small\" type=\"primary\" @click=\"callEditAccount()\">新增账号</el-button>\n          </div>\n        </div>\n      </div>\n      <div class=\"result-view\">\n        <el-table :data=\"accountListFilter\" style=\"width: 100%;\">\n          <el-table-column prop=\"username\"  label=\"账号\" width=\"340\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"accountRoleRelations\"  label=\"角色\" width=\"340\" align=\"center\">\n            <template slot-scope=\"scope\">\n              <span v-for=\"item in scope.row.accountRoleRelations\">{{mapRoleID[item.sellerRoleId+'']}}&nbsp;&nbsp;</span>\n            </template>\n          </el-table-column>\n          <el-table-column  label=\"操作\"  align=\"center\">\n            <template slot-scope=\"scope\">\n              <el-button size=\"small\" type=\"primary\" @click=\"callEditAccount(scope.row)\">配置角色</el-button>\n              <el-button size=\"small\" type=\"primary\" @click=\"changePwd(scope.row.id,scope.row.password)\">修改密码</el-button>\n              <el-button size=\"small\" @click=\"callDelAccount(scope.row.id,scope.row.username)\">删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n\n      <!--账户编辑弹窗-->\n      <div class=\"modal\">\n        <el-dialog size=\"tiny\" title=\"账户编辑\" :visible.sync=\"accountRoleConfig.isModal\" @close=\"cancelEditAccount()\">\n          <el-form v-if=\"accountRoleConfig.type == 'add'\" :model=\"accountRoleConfig.opts.add\" :rules=\"accountRoleConfigRules\" ref=\"accountRoleConfig.opts.add\">\n            <el-form-item  label=\"账户\" prop=\"username\" label-width=\"100px\">\n              <el-input  v-model=\"accountRoleConfig.opts.add.username\" placeholder=\"请填写\" auto-complete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item  label=\"密码\" prop=\"password\" label-width=\"100px\">\n              <el-input type=\"password\" v-model=\"accountRoleConfig.opts.add.password\" placeholder=\"请填写\" auto-complete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item  label=\"确认密码\" prop=\"remark\" label-width=\"100px\">\n              <el-input type=\"password\"  v-model=\"accountRoleConfig.opts.add.remark\" placeholder=\"请填写\" auto-complete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item  label=\"角色\" prop=\"accountRoleRelations\" label-width=\"100px\">\n              <el-checkbox-group v-model=\"accountRoleConfig.checkList\">\n                <template v-for=\"(item,key) in roleCheckOptions\">\n                  <el-checkbox :label=\"item.roleName\"></el-checkbox>\n                </template>\n\n              </el-checkbox-group>\n            </el-form-item>\n          </el-form>\n          <el-form v-else :model=\"accountRoleConfig.opts.edit\" :rules=\"accountRoleConfigRules\" ref=\"accountRoleConfig.opts.edit\">\n            <el-form-item  prop=\"accountRoleRelations\" label=\"角色\" label-width=\"100px\">\n              <el-checkbox-group v-model=\"accountRoleConfig.checkList\">\n                <template v-for=\"(item,key) in roleCheckOptions\">\n                  <el-checkbox :label=\"item.roleName\"></el-checkbox>\n                </template>\n              </el-checkbox-group>\n            </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"cancelEditAccount()\">取 消</el-button>\n            <el-button v-if=\"accountRoleConfig.type == 'add'\" type=\"primary\" @click=\"submitEditAccount('accountRoleConfig.opts.add')\">确 定</el-button>\n            <el-button v-else type=\"primary\" @click=\"submitEditAccount('accountRoleConfig.opts.edit')\">确 定</el-button>\n          </div>\n        </el-dialog>\n      </div>\n      <div class=\"modal\">\n        <el-dialog size=\"tiny\" title=\"修改密码\" :visible.sync=\"changePwdConfig.isModal\"  @close=\"cancelChangePwd()\">\n          <el-form :model=\"changePwdConfig.opts\" :rules=\"changePwdConfigRules\" ref=\"changePwdConfig.opts\">\n            <el-form-item v-if=\"changePwdConfig.type == 'Main'\"  prop=\"oldPassword\" label=\"原密码\" label-width=\"100px\">\n              <el-input  type=\"password\" v-model=\"changePwdConfig.opts.oldPassword\" placeholder=\"请填写\" auto-complete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item  label=\"新密码\" label-width=\"100px\" prop=\"newPassword\">\n              <el-input  type=\"password\" v-model=\"changePwdConfig.opts.newPassword\" placeholder=\"请填写\" auto-complete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item  label=\"确认密码\" label-width=\"100px\" prop=\"confirmPassword\">\n              <el-input  type=\"password\" v-model=\"changePwdConfig.opts.confirmPassword\" placeholder=\"请填写\" auto-complete=\"off\"></el-input>\n            </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"cancelChangePwd()\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"submitChangePwd('changePwdConfig.opts')\">确 定</el-button>\n          </div>\n        </el-dialog>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import {mapState, mapActions} from 'vuex'\n  export default {\n    name: 'authority',\n    created (){\n      this.initView()\n    },\n    data() {\n      const validateArray = (rule, value, callback) => {\n        if(value.length < 1){\n          callback(new Error('请选择'));\n        }   else {\n          callback();\n        }\n      }\n      const validateTreeList = (rule, value, callback) => {\n//        console.log('======')\n        if(this.roleEditConfig.opts.roleFunctionRelations.length < 1){\n          callback(new Error('请选择权限'));\n        }   else {\n          callback();\n        }\n      }\n      const validatePass = (rule, value, callback) => {\n        const reg = /^[a-zA-Z0-9]{6,12}$/g;\n        if (value === '') {\n          callback(new Error('请输入密码'));\n        } else {\n          if(!value.match(reg)){\n            callback(new Error('密码6-12位字母或数字组成'));\n          }  else {\n            callback();\n//            this.$refs[this.changePwdConfig.opts].validateField('confirmPassword');\n          }\n        }\n      }\n      const validateConfPass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请再次输入密码'));\n        }\n        else if (value !== this.changePwdConfig.opts.newPassword) {\n          callback(new Error('两次输入密码不一致!'));\n        }\n        else {\n          callback();\n        }\n      }\n      const validateRoleConfPass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请再次输入密码'));\n        }\n        else if (value !== this.accountRoleConfig.opts.add.password) {\n          callback(new Error('两次输入密码不一致!'));\n        }\n        else {\n          callback();\n        }\n      }\n      const validateCheckList = (rule, value, callback) => {\n        if(this.accountRoleConfig.checkList.length < 1){\n          callback(new Error('请选择角色'));\n        }   else {\n          callback();\n        }\n      }\n      return {\n        dialogClose:false,  //角色编辑\n        changePwdConfig:{\n          isModal:false,\n          type:'',\n          opts:{\n            accountId:'',\n            oldPassword:'',\n            newPassword:'',\n            confirmPassword:'',\n          },\n        }, //密码修改数据\n        changePwdConfigRules:{\n          oldPassword:[\n            { required: true,message: '请输入密码', trigger: 'blur' }\n          ],\n          newPassword:[\n            { required: true, validator: validatePass, trigger: 'blur' },\n          ],\n          confirmPassword:[\n            { required: true, validator: validateConfPass, trigger: 'blur' },\n          ],\n        }, //密码修改规则\n        mapTree:{},\n        treeList:[],\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        }, //默认选中树状图\n        roleEditConfig:{\n          isModal:false,\n          opts:{\n            id:'',\n            roleName:'',\n            roleDesc:'',\n            roleFunctionRelations:[]\n          },\n          sellerRoleId:'',\n          defaultChecked:[]\n        }, //角色修改数据配置\n        roleEditConfigRules:{\n          roleName:[\n            { required: true, message: '请输入角色名称', trigger: 'blur' }\n          ],\n          roleDesc:[\n            { required: true, message: '请输入角色描述', trigger: 'blur' }\n          ],\n          roleFunctionRelations:[\n            { required: true, validator: validateTreeList, trigger: 'change' }\n          ]\n        },  //角色修改规则\n        accountRoleConfig:{\n          isModal:false,\n          id:'',\n          type:'',\n          opts:{\n            edit:{\n              id:'',\n              accountRoleRelations:[],\n            },\n            add:{\n              username:'',\n              password:'',\n              remark:'',\n              accountRoleRelations:[],\n            }\n          },\n          checkList: []\n        }, //账户修改数据配置\n        accountRoleConfigRules:{\n          username:[\n            { required: true, message: '请输入账户名', trigger: 'blur' }\n          ],\n          password:[\n            { required: true, validator: validatePass, trigger: 'blur' }\n          ],\n          remark:[\n            { required: true, validator:validateRoleConfPass, trigger: 'blur' }\n          ],\n          accountRoleRelations:[\n//            { required: true, type: 'array', message: '请选择角色', trigger: 'change' }\n            { required: true, validator: validateCheckList, trigger: 'change' }\n          ],\n        }, //账户修改规则\n        roleCheckOptions:[],\n        mapRoleID:{},\n        accountListFilter:[],\n        roleClick:false,\n        accountRoleList:[],\n        accountFunList:[]\n      }\n    },\n    computed: {\n      ...mapState(['loginCheck','sellerInfo'])\n    },\n    methods: {\n      ...mapActions(['getAccountList','changeAccountPwd','getAccountRoleList','getAccountFunctionList',\n        'saveAccountRole','delAccountRole','addAccount','changeAccountRole','delAccount',\n        'callSetNotice']),\n//      页面初始化\n      initView(){\n        this.getAccountFunctionList()\n          .then((rs)=>{\n//            权限列表\n            this.accountFunList = rs\n            this.setFunList()\n          })\n        this.callGetAccountRoleList()\n        this.callGetAccountList()\n      },\n//      账户列表\n      callGetAccountList(){\n        this.getAccountList()\n          .then((rs)=>{\n            let arr = JSON.parse(JSON.stringify(rs))\n            this.accountListFilter = arr.filter((item)=>this.loginCheck.id != item.id)\n          })\n      },\n//      角色列表\n      callGetAccountRoleList(){\n        this.getAccountRoleList()\n          .then((rs)=>{\n            this.accountRoleList = rs\n            this.roleCheckOptions = []\n            for(let i in this.accountRoleList){\n                let opt = {\n                  id:this.accountRoleList[i].id,\n                  roleName:this.accountRoleList[i].roleName,\n                }\n              this.mapRoleID[this.accountRoleList[i].id+''] = this.accountRoleList[i].roleName\n              this.roleCheckOptions.push(opt)\n            }\n//            console.log(this.mapRoleID)\n          })\n      },\n//      设置权限本地\n      setFunList(){\n        let childrenList = [];\n        for(let i in this.accountFunList){\n          this.mapTree[this.accountFunList[i].id] = this.accountFunList[i].functionName\n            if(this.accountFunList[i].parentId == 0){\n              let opts = {\n                id:this.accountFunList[i].id,\n                label:this.accountFunList[i].functionName,\n                children:[]\n              }\n              this.treeList.push(opts);\n            } else{\n              childrenList.push(this.accountFunList[i])\n            }\n        }\n        for(let i in childrenList){\n            for(let j in this.treeList){\n                if(childrenList[i].parentId == this.treeList[j].id){\n                  let opts = {\n                    id:childrenList[i].id,\n                    label:childrenList[i].functionName,\n                  }\n                  this.treeList[j].children.push(opts)\n                }\n            }\n        }\n//        console.log(this.treeList)\n      },\n//      取消修改密码\n      cancelChangePwd(){\n        this.changePwdConfig.isModal = false;\n        this.changePwdConfig.opts = {\n          accountId:'',\n          oldPassword:'',\n          newPassword:'',\n          confirmPassword:'',\n        }\n      },\n//      提交密码修改\n      submitChangePwd(formName){\n        let isCheck = false\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            isCheck = true\n          } else {\n            isCheck = false\n            return false;\n          }\n        })\n        if(!isCheck){\n            return false\n        }\n//         if(!this.changePwdConfig.opts.oldPassword || !this.changePwdConfig.opts.newPassword || !this.changePwdConfig.opts.confirmPassword ) {\n//           this.getNotice('密码输入不能为空');\n//             return false\n//         }\n//         const reg = /^[a-zA-Z0-9]{6,12}$/g;\n//          if(!this.changePwdConfig.opts.newPassword.match(reg) || !this.changePwdConfig.opts.confirmPassword.match(reg)){\n//           this.getNotice('密码格式错误6到12位字母或数字');\n//           return false\n//         }\n//         if(this.changePwdConfig.opts.newPassword != this.changePwdConfig.opts.confirmPassword){\n//           this.getNotice('确认密码输入不一致');\n//           return false\n//         }\n         const opts = {\n           accountId:this.changePwdConfig.opts.accountId,\n           oldPassword:this.changePwdConfig.opts.oldPassword,\n           newPassword:this.changePwdConfig.opts.newPassword,\n         }\n//         console.log(opts)\n        this.changeAccountPwd(opts)\n          .then(()=>{\n             this.cancelChangePwd()\n          })\n      },\n//      调用修改密码\n      changePwd(id,pwd){\n        this.changePwdConfig.isModal = true;\n        this.changePwdConfig.opts = {\n          accountId:id,\n          oldPassword:pwd,\n          newPassword:'',\n          confirmPassword:'',\n        }\n        if(!pwd){\n          this.changePwdConfig.type = 'Main'\n        }else{\n          this.changePwdConfig.type = ''\n        }\n      },\n//      调用删除角色\n      callDelRole(id){\n//        delAccountRole\n        const opts = {\n          roleId:id\n        }\n        this.$confirm('是否删除角色', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n        }).then(() => {\n          this.delAccountRole(opts)\n            .then(()=>{\n              this.callGetAccountRoleList()\n            })\n        }).catch(() => {\n        });\n      },\n//      调用编辑角色\n      callEditRole(item){\n          let self = this;\n          if(item){\n            let updateList = [],\n                defaultList =[],\n                defaultCheck = [];\n            let _mapTree = {}\n            this.treeList.map((item)=>{\n                if(item.children.length){\n                  _mapTree[item.id] = item.children\n                }\n            })\n            for(let i in item.roleFunctionRelations){\n              if(!_mapTree[item.roleFunctionRelations[i].sellerFuncId]){\n                let defOpt = {\n                  id:item.roleFunctionRelations[i].sellerFuncId,\n                  label:this.mapTree[item.roleFunctionRelations[i].sellerFuncId]\n                }\n                defaultCheck.push(defOpt)\n              }\n\n            }\n\n            this.roleEditConfig.opts = {\n              id:item.id,\n              roleName:item.roleName,\n              roleDesc:item.roleDesc,\n//              roleFunctionRelations:updateList\n              roleFunctionRelations:[]\n            }\n//            this.roleEditConfig.defaultChecked = defaultList\n            this.roleEditConfig.sellerRoleId = item.id\n            this.roleEditConfig.isModal = true\n            let self = this;\n            setTimeout(function(){\n              self.$refs.tree.setCheckedNodes(defaultCheck);\n            },100)\n//            console.log(this.roleEditConfig.defaultChecked)\n          }\n          else{\n            this.roleEditConfig.opts = {\n              id:'',\n              roleName:'',\n              roleDesc:'',\n              roleFunctionRelations:[]\n            }\n            this.roleEditConfig.sellerRoleId = ''\n//            this.roleEditConfig.defaultChecked = []\n            this.roleEditConfig.isModal = true\n            let self = this;\n            setTimeout(function(){\n              self.$refs.tree.setCheckedNodes([]);\n            },10)\n          }\n\n      },\n//      取消编辑角色\n      cancelRole(){\n        this.roleEditConfig.opts = {\n          id:'',\n          roleName:'',\n          roleDesc:'',\n          roleFunctionRelations:[]\n        }\n        this.roleEditConfig.sellerRoleId = ''\n//        this.roleEditConfig.defaultChecked = []\n        this.$refs.tree.setCheckedNodes([]);\n        this.$refs['roleEditConfig.opts'].resetFields()\n        this.roleEditConfig.isModal = false\n      },\n//      提交编辑角色\n      submitRole(formName){\n//        if(!this.roleEditConfig.opts.roleName){\n//          this.getNotice('不能为空');\n//          return false\n//        }\n//        if(!this.roleEditConfig.opts.roleDesc){\n//          this.getNotice('描述不能为空');\n//          return false\n//        }\n        let isCheck = false\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            isCheck = true\n          } else {\n            isCheck = false\n            return false;\n          }\n        });\n        if(!isCheck){\n            return false\n        }\n//        if(this.roleEditConfig.opts.roleFunctionRelations.length<1){\n//          this.getNotice('请选择权限');\n//          return false\n//        }\n        let _optObj = {}\n        this.roleEditConfig.opts.roleFunctionRelations.map((item)=>{\n          _optObj[item.sellerFuncId] = item.sellerFuncId\n        })\n        let _other = {}\n        this.treeList.map((item)=>{\n          if(item.children.length){\n            item.children.map((subItem)=>{\n              if(_optObj[subItem.id] && !_optObj[item.id]){\n                _other[item.id] = item.id\n              }\n            })\n          }\n        })\n        for(let i in _other){\n          let _opts = {\n            sellerRoleId: this.roleEditConfig.opts.roleFunctionRelations[0].sellerRoleId,\n            sellerFuncId: _other[i],\n          }\n          this.roleEditConfig.opts.roleFunctionRelations.push(_opts)\n        }\n\n//        return false\n//        this.roleEditConfig.opts.roleFunctionRelations.push(_opts)\n        this.saveAccountRole(this.roleEditConfig.opts)\n          .then(()=>{\n            this.callGetAccountRoleList()\n            this.cancelRole()\n          })\n      },\n//      角色树状图选择\n      checkedTree(data, checked, indeterminate){\n//          console.log(checked)\n//          console.log(data)\n//          console.log(data.id,data.label,checked)\n          if(checked){\n            let opt = {\n//              id:'',\n              sellerRoleId:this.roleEditConfig.sellerRoleId,\n              sellerFuncId:data.id,\n            }\n            this.roleEditConfig.opts.roleFunctionRelations.push(opt)\n          }\n          if(!checked){\n            let idx = this.roleEditConfig.opts.roleFunctionRelations.findIndex((element)=> element.sellerFuncId == data.id)\n            if(idx > -1){\n              this.roleEditConfig.opts.roleFunctionRelations.splice(idx,1)\n            }\n          }\n//          let s = '---'\n//          for(let i in this.roleEditConfig.opts.roleFunctionRelations){\n//              s += this.roleEditConfig.opts.roleFunctionRelations[i].label+'---'\n//          }\n//          console.log(s)\n//          console.log(this.roleEditConfig.opts.roleFunctionRelations)\n      },\n//      取消修改账户\n      cancelEditAccount(){\n        this.accountRoleConfig.type = ''\n        this.accountRoleConfig.id = ''\n        this.accountRoleConfig.opts.add.accountRoleRelations = []\n        this.accountRoleConfig.opts.edit.accountRoleRelations = []\n        this.accountRoleConfig.isModal = false\n      },\n//      调用修改账户\n      callEditAccount(item){\n        this.accountRoleConfig.checkList = []\n        if(item){\n          this.accountRoleConfig.type = 'edit'\n          this.accountRoleConfig.id = item.id\n          for(let i in item.accountRoleRelations){\n              for(let j in this.accountRoleList){\n                  if(item.accountRoleRelations[i].sellerRoleId == this.accountRoleList[j].id){\n                    this.accountRoleConfig.checkList.push(this.accountRoleList[j].roleName)\n                  }\n              }\n          }\n          this.accountRoleConfig.opts.add.accountRoleRelations = this.accountRoleConfig.checkList\n          this.accountRoleConfig.opts.edit.accountRoleRelations = this.accountRoleConfig.checkList\n        } else{\n          this.accountRoleConfig.type = 'add'\n        }\n        this.accountRoleConfig.isModal = true\n      },\n//      提交修改账户\n      submitEditAccount(formName){\n        let isCheck = false\n        let accountRoleList = []\n        for(let i in this.accountRoleConfig.checkList){\n          for(let j in this.accountRoleList){\n            if(this.accountRoleConfig.checkList[i] == this.accountRoleList[j].roleName){\n              let opts = {\n                id:'',\n                sellerAccountId:this.accountRoleConfig.id,\n                sellerRoleId:this.accountRoleList[j].id\n              }\n              accountRoleList.push(opts)\n            }\n          }\n        }\n        this.accountRoleConfig.opts.add.accountRoleRelations = accountRoleList\n        this.accountRoleConfig.opts.edit.accountRoleRelations = accountRoleList\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            isCheck = true\n          } else {\n            isCheck = false\n            return false;\n          }\n        });\n        if(!isCheck){\n          return false\n        }\n        const type =  this.accountRoleConfig.type\n//        console.log(type)\n//        console.log(this.accountRoleConfig.checkList)\n        if(type == 'add'){\n//            if(!this.accountRoleConfig.opts.add.username || !this.accountRoleConfig.opts.add.password || !this.accountRoleConfig.opts.add.remark){\n//              this.getNotice('不能为空');\n//                return false;\n//            }\n//          const reg = /^[a-zA-Z0-9]{6,12}$/g;\n//            if(!this.accountRoleConfig.opts.add.password.match(reg) || !this.accountRoleConfig.opts.add.remark.match(reg)){\n//              this.getNotice('格式不正确6-12位字母或数字');\n//              return false\n//            }\n//            if(this.accountRoleConfig.opts.add.password != this.accountRoleConfig.opts.add.remark){\n//              this.getNotice('确认密码不相等');\n//                return false\n//            }\n//            if(accountRoleList.length<1){\n//              this.getNotice('请选择角色');\n//              return false\n//            }\n            const opts = {\n              username:this.accountRoleConfig.opts.add.username,\n              password:this.accountRoleConfig.opts.add.password,\n              remark:this.accountRoleConfig.opts.add.remark,\n              accountRoleRelations:accountRoleList,\n            }\n          this.addAccount(opts)\n            .then(()=>{\n              this.callGetAccountList()\n              this.cancelEditAccount()\n            })\n//            console.log(opts)\n        }\n        else if(type == 'edit'){\n//          if(accountRoleList.length<1){\n//            this.getNotice('请选择角色');\n//            return false\n//          }\n          const opts = {\n            id:this.accountRoleConfig.id,\n            accountRoleRelations:accountRoleList,\n          }\n          this.changeAccountRole(opts)\n            .then(()=>{\n              this.callGetAccountList()\n              this.cancelEditAccount()\n            })\n//          console.log(opts)\n        }\n      },\n//      删除账户\n      callDelAccount(id,name){\n        const opts = {\n          accountId:id\n        }\n        this.$confirm('是否删除账号 '+name, '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n        }).then(() => {\n          this.delAccount(opts)\n            .then(()=>{\n              this.callGetAccountList()\n            })\n        }).catch(() => {\n        });\n      },\n//      错误提示\n      getNotice(msg){\n        const notice = {\n          isShow:true,\n          msg:msg,\n        }\n        this.callSetNotice(notice)\n      },\n    }\n  }\n</script>\n<style scoped lang='less' rel=\"stylesheet/less\">\n  .section-item{\n    padding: 0;\n    .section-title{\n      padding: 10px 20px;\n      .block-item{\n        float: right;\n        padding: 0;\n      }\n    }\n    &.padding{\n      padding-left: 20px;\n      .section-title{\n        padding: 10px 0;\n      }\n    }\n  }\n  .result-view{\n    margin-bottom: 20px;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/accountManage/authority.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"section\"},[_c('div',{staticClass:\"section-item padding\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"block-item\"},[_vm._v(\"\\n        账号:\"+_vm._s(_vm.loginCheck.username)+\"\\n      \")]),_vm._v(\" \"),_c('div',{staticClass:\"block-item\"},[_vm._v(\"\\n        密码:\\n        \"),_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":function($event){_vm.changePwd(_vm.loginCheck.id,'')}}},[_vm._v(\"修改密码\")])],1)]),_vm._v(\" \"),_c('div',{staticClass:\"section-item\"},[_c('div',{staticClass:\"section-title\"},[_c('span',[_vm._v(\"角色设置\")]),_vm._v(\" \"),_c('div',{staticClass:\"block-item\"},[_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":function($event){_vm.callEditRole()}}},[_vm._v(\"新增角色\")])],1)]),_vm._v(\" \"),_c('div',{staticClass:\"modal\"},[_c('el-dialog',{attrs:{\"size\":\"tiny\",\"title\":\"角色编辑\",\"visible\":_vm.roleEditConfig.isModal},on:{\"close\":function($event){_vm.cancelRole()},\"update:visible\":function($event){_vm.$set(_vm.roleEditConfig, \"isModal\", $event)}}},[_c('el-form',{ref:\"roleEditConfig.opts\",attrs:{\"model\":_vm.roleEditConfig.opts,\"rules\":_vm.roleEditConfigRules}},[_c('el-form-item',{attrs:{\"label\":\"角色\",\"prop\":\"roleName\",\"label-width\":\"80px\"}},[_c('el-input',{attrs:{\"placeholder\":\"角色名称\",\"auto-complete\":\"off\"},model:{value:(_vm.roleEditConfig.opts.roleName),callback:function ($$v) {_vm.$set(_vm.roleEditConfig.opts, \"roleName\", $$v)},expression:\"roleEditConfig.opts.roleName\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"描述\",\"prop\":\"roleDesc\",\"label-width\":\"80px\"}},[_c('el-input',{attrs:{\"placeholder\":\"角色描述\",\"auto-complete\":\"off\"},model:{value:(_vm.roleEditConfig.opts.roleDesc),callback:function ($$v) {_vm.$set(_vm.roleEditConfig.opts, \"roleDesc\", $$v)},expression:\"roleEditConfig.opts.roleDesc\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"权限\",\"prop\":\"roleFunctionRelations\",\"label-width\":\"80px\"}},[_c('el-tree',{ref:\"tree\",attrs:{\"data\":_vm.treeList,\"show-checkbox\":\"\",\"node-key\":\"id\",\"props\":_vm.defaultProps,\"auto-complete\":\"off\"},on:{\"check-change\":_vm.checkedTree}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.cancelRole()}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.submitRole('roleEditConfig.opts')}}},[_vm._v(\"确 定\")])],1)],1)],1)]),_vm._v(\" \"),_c('div',{staticClass:\"result-view\"},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.accountRoleList}},[_c('el-table-column',{attrs:{\"prop\":\"roleName\",\"label\":\"角色\",\"width\":\"340\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"roleDesc\",\"label\":\"描述\",\"width\":\"340\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":function($event){_vm.callEditRole(scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.callDelRole(scope.row.id)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"section-item\"},[_c('div',{staticClass:\"section-title\"},[_c('span',[_vm._v(\"其他账号设置\")]),_vm._v(\" \"),_c('div',{staticClass:\"block-item\"},[_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":function($event){_vm.callEditAccount()}}},[_vm._v(\"新增账号\")])],1)])]),_vm._v(\" \"),_c('div',{staticClass:\"result-view\"},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.accountListFilter}},[_c('el-table-column',{attrs:{\"prop\":\"username\",\"label\":\"账号\",\"width\":\"340\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"accountRoleRelations\",\"label\":\"角色\",\"width\":\"340\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return _vm._l((scope.row.accountRoleRelations),function(item){return _c('span',[_vm._v(_vm._s(_vm.mapRoleID[item.sellerRoleId+''])+\"  \")])})}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":function($event){_vm.callEditAccount(scope.row)}}},[_vm._v(\"配置角色\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":function($event){_vm.changePwd(scope.row.id,scope.row.password)}}},[_vm._v(\"修改密码\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.callDelAccount(scope.row.id,scope.row.username)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"modal\"},[_c('el-dialog',{attrs:{\"size\":\"tiny\",\"title\":\"账户编辑\",\"visible\":_vm.accountRoleConfig.isModal},on:{\"update:visible\":function($event){_vm.$set(_vm.accountRoleConfig, \"isModal\", $event)},\"close\":function($event){_vm.cancelEditAccount()}}},[(_vm.accountRoleConfig.type == 'add')?_c('el-form',{ref:\"accountRoleConfig.opts.add\",attrs:{\"model\":_vm.accountRoleConfig.opts.add,\"rules\":_vm.accountRoleConfigRules}},[_c('el-form-item',{attrs:{\"label\":\"账户\",\"prop\":\"username\",\"label-width\":\"100px\"}},[_c('el-input',{attrs:{\"placeholder\":\"请填写\",\"auto-complete\":\"off\"},model:{value:(_vm.accountRoleConfig.opts.add.username),callback:function ($$v) {_vm.$set(_vm.accountRoleConfig.opts.add, \"username\", $$v)},expression:\"accountRoleConfig.opts.add.username\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"密码\",\"prop\":\"password\",\"label-width\":\"100px\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请填写\",\"auto-complete\":\"off\"},model:{value:(_vm.accountRoleConfig.opts.add.password),callback:function ($$v) {_vm.$set(_vm.accountRoleConfig.opts.add, \"password\", $$v)},expression:\"accountRoleConfig.opts.add.password\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"确认密码\",\"prop\":\"remark\",\"label-width\":\"100px\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请填写\",\"auto-complete\":\"off\"},model:{value:(_vm.accountRoleConfig.opts.add.remark),callback:function ($$v) {_vm.$set(_vm.accountRoleConfig.opts.add, \"remark\", $$v)},expression:\"accountRoleConfig.opts.add.remark\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"角色\",\"prop\":\"accountRoleRelations\",\"label-width\":\"100px\"}},[_c('el-checkbox-group',{model:{value:(_vm.accountRoleConfig.checkList),callback:function ($$v) {_vm.$set(_vm.accountRoleConfig, \"checkList\", $$v)},expression:\"accountRoleConfig.checkList\"}},[_vm._l((_vm.roleCheckOptions),function(item,key){return [_c('el-checkbox',{attrs:{\"label\":item.roleName}})]})],2)],1)],1):_c('el-form',{ref:\"accountRoleConfig.opts.edit\",attrs:{\"model\":_vm.accountRoleConfig.opts.edit,\"rules\":_vm.accountRoleConfigRules}},[_c('el-form-item',{attrs:{\"prop\":\"accountRoleRelations\",\"label\":\"角色\",\"label-width\":\"100px\"}},[_c('el-checkbox-group',{model:{value:(_vm.accountRoleConfig.checkList),callback:function ($$v) {_vm.$set(_vm.accountRoleConfig, \"checkList\", $$v)},expression:\"accountRoleConfig.checkList\"}},[_vm._l((_vm.roleCheckOptions),function(item,key){return [_c('el-checkbox',{attrs:{\"label\":item.roleName}})]})],2)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.cancelEditAccount()}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),(_vm.accountRoleConfig.type == 'add')?_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.submitEditAccount('accountRoleConfig.opts.add')}}},[_vm._v(\"确 定\")]):_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.submitEditAccount('accountRoleConfig.opts.edit')}}},[_vm._v(\"确 定\")])],1)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"modal\"},[_c('el-dialog',{attrs:{\"size\":\"tiny\",\"title\":\"修改密码\",\"visible\":_vm.changePwdConfig.isModal},on:{\"update:visible\":function($event){_vm.$set(_vm.changePwdConfig, \"isModal\", $event)},\"close\":function($event){_vm.cancelChangePwd()}}},[_c('el-form',{ref:\"changePwdConfig.opts\",attrs:{\"model\":_vm.changePwdConfig.opts,\"rules\":_vm.changePwdConfigRules}},[(_vm.changePwdConfig.type == 'Main')?_c('el-form-item',{attrs:{\"prop\":\"oldPassword\",\"label\":\"原密码\",\"label-width\":\"100px\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请填写\",\"auto-complete\":\"off\"},model:{value:(_vm.changePwdConfig.opts.oldPassword),callback:function ($$v) {_vm.$set(_vm.changePwdConfig.opts, \"oldPassword\", $$v)},expression:\"changePwdConfig.opts.oldPassword\"}})],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"新密码\",\"label-width\":\"100px\",\"prop\":\"newPassword\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请填写\",\"auto-complete\":\"off\"},model:{value:(_vm.changePwdConfig.opts.newPassword),callback:function ($$v) {_vm.$set(_vm.changePwdConfig.opts, \"newPassword\", $$v)},expression:\"changePwdConfig.opts.newPassword\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"确认密码\",\"label-width\":\"100px\",\"prop\":\"confirmPassword\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请填写\",\"auto-complete\":\"off\"},model:{value:(_vm.changePwdConfig.opts.confirmPassword),callback:function ($$v) {_vm.$set(_vm.changePwdConfig.opts, \"confirmPassword\", $$v)},expression:\"changePwdConfig.opts.confirmPassword\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.cancelChangePwd()}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.submitChangePwd('changePwdConfig.opts')}}},[_vm._v(\"确 定\")])],1)],1)],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"title\"},[_c('span',[_vm._v(\"账户与权限\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-title\"},[_c('span',[_vm._v(\"当前账号设置\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-9a8d6b08\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/accountManage/authority.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-9a8d6b08\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./authority.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./authority.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./authority.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-9a8d6b08\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./authority.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-9a8d6b08\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/accountManage/authority.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}